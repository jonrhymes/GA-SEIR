{"ast":null,"code":"import Layout from '../components/Layout';\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch'; // export default function Details (props) {\n//     return (\n//         <Layout>\n//             <h1>Skill Details</h1>\n//         </Layout>\n//     )\n// }\n// pages/posts/[id].js\n\nfunction Details({\n  skills\n}) {// Render post...\n} // This function gets called at build time\n\n\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const res = await fetch('http://127.0.0.1:8000/api/v1/skill/');\n  const data = await res.json(); // Get the paths we want to pre-render based on posts\n\n  const paths = data.map(data => ({\n    params: {\n      id: post.id\n    }\n  })); // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n\n  return {\n    paths,\n    fallback: false\n  };\n} // This also gets called at build time\n\nexport async function getStaticProps({\n  params\n}) {\n  // params contains the post `id`.\n  // If the route is like /posts/1, then params.id is 1\n  const res = await fetch(`http://127.0.0.1:8000/api/v1/skill/${params.id}`);\n  const data = await res.json(); // Pass post data to the page via props\n\n  return {\n    props: {\n      data\n    }\n  };\n}\nexport default Details; // Details.getInitialProps = async () => {\n//     let res, data, skills;\n//     try {\n//         res = await fetch(`http://127.0.0.1:8000/api/v1/skill/`)\n//         data = await res.json();\n//         skills = data.objects;\n//     } catch(error){\n//         console.error(error);\n//     }\n//     return {\n//         skills\n//     }\n// };","map":{"version":3,"sources":["/Users/jonrhymes/Desktop/General_Assembly/djangohw/test_frontend/pages/details.js"],"names":["Layout","React","fetch","Details","skills","getStaticPaths","res","data","json","paths","map","params","id","post","fallback","getStaticProps","props"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA6B,CAC3B;AACD,C,CAED;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,GAAG,GAAG,MAAMJ,KAAK,CAAC,qCAAD,CAAvB;AACA,QAAMK,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB,CAHqC,CAKrC;;AACA,QAAMC,KAAK,GAAGF,IAAI,CAACG,GAAL,CAAUH,IAAD,KAAW;AAChCI,IAAAA,MAAM,EAAE;AAAEC,MAAAA,EAAE,EAAEC,IAAI,CAACD;AAAX;AADwB,GAAX,CAAT,CAAd,CANqC,CAUrC;AACA;;AACA,SAAO;AAAEH,IAAAA,KAAF;AAASK,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACD,C,CAED;;AACA,OAAO,eAAeC,cAAf,CAA8B;AAAEJ,EAAAA;AAAF,CAA9B,EAA0C;AAC/C;AACA;AACA,QAAML,GAAG,GAAG,MAAMJ,KAAK,CAAE,sCAAqCS,MAAM,CAACC,EAAG,EAAjD,CAAvB;AACA,QAAML,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB,CAJ+C,CAM/C;;AACA,SAAO;AAAEQ,IAAAA,KAAK,EAAE;AAAET,MAAAA;AAAF;AAAT,GAAP;AACD;AAED,eAAeJ,OAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Layout from '../components/Layout';\nimport React from 'react'\nimport fetch from 'isomorphic-unfetch';\n\n// export default function Details (props) {\n//     return (\n//         <Layout>\n//             <h1>Skill Details</h1>\n//         </Layout>\n//     )\n// }\n\n// pages/posts/[id].js\n\nfunction Details({ skills }) {\n  // Render post...\n}\n\n// This function gets called at build time\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const res = await fetch('http://127.0.0.1:8000/api/v1/skill/')\n  const data = await res.json()\n\n  // Get the paths we want to pre-render based on posts\n  const paths = data.map((data) => ({\n    params: { id: post.id },\n  }))\n\n  // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n  return { paths, fallback: false }\n}\n\n// This also gets called at build time\nexport async function getStaticProps({ params }) {\n  // params contains the post `id`.\n  // If the route is like /posts/1, then params.id is 1\n  const res = await fetch(`http://127.0.0.1:8000/api/v1/skill/${params.id}`)\n  const data = await res.json()\n\n  // Pass post data to the page via props\n  return { props: { data } }\n}\n\nexport default Details\n\n\n// Details.getInitialProps = async () => {\n//     let res, data, skills;\n//     try {\n//         res = await fetch(`http://127.0.0.1:8000/api/v1/skill/`)\n//         data = await res.json();\n//         skills = data.objects;\n//     } catch(error){\n//         console.error(error);\n//     }\n//     return {\n//         skills\n//     }\n// };"]},"metadata":{},"sourceType":"module"}