{"ast":null,"code":"var _jsxFileName = \"/Users/jonrhymes/Desktop/General_Assembly/djangohw/test_frontend/pages/details.js\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nexport default function Details(props) {\n  const {\n    skills\n  } = props;\n  let skill_level;\n\n  switch (skills.skill_level) {\n    case 1:\n      skill_level = \"Fundamental Awareness\";\n      break;\n\n    case 2:\n      skill_level = \"Novice\";\n      break;\n\n    case 3:\n      skill_level = \"Intermediate\";\n      break;\n\n    case 4:\n      skill_level = \"Advanced\";\n      break;\n\n    case 5:\n      skill_level = \"Expert\";\n\n    case 6:\n      skill_level = \"Code Wizard!\";\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, skills.description), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Skill level: \", skills.skill_level));\n} // // pages/posts/[id].js\n//\n// function Details() {\n//   // Render post...\n// }\n//\n// // This function gets called at build time\n// export async function getStaticPaths() {\n//   // Call an external API endpoint to get posts\n//   const res = await fetch('http://127.0.0.1:8000/api/v1/skill/')\n//   const data = await res.json()\n//\n//   // Get the paths we want to pre-render based on posts\n//   const paths = data.map((data) => ({\n//     params: { id: post.id },\n//   }))\n//\n//   // We'll pre-render only these paths at build time.\n//   // { fallback: false } means other routes should 404.\n//   return { paths, fallback: false }\n// }\n//\n// // This also gets called at build time\n// export async function getStaticProps({ params }) {\n//   // params contains the post `id`.\n//   // If the route is like /posts/1, then params.id is 1\n//   const res = await fetch(`http://127.0.0.1:8000/api/v1/skill/${params.id}`)\n//   const data = await res.json()\n//\n//   // Pass post data to the page via props\n//   return { props: { data } }\n// }\n//\n// export default Details\n\nDetails.getInitialProps = async ({\n  query\n}) => {\n  let res, data, skills;\n\n  try {\n    res = await fetch(`http://127.0.0.1:8000/api/v1/skill/`);\n    data = await res.json();\n    skills = data.objects.find(skills => skills.id === parseInt(query.id));\n  } catch (error) {\n    console.error(error);\n  }\n\n  return {\n    skills\n  };\n}; // export default Details;","map":{"version":3,"sources":["/Users/jonrhymes/Desktop/General_Assembly/djangohw/test_frontend/pages/details.js"],"names":["Layout","React","fetch","Details","props","skills","skill_level","description","getInitialProps","query","res","data","json","objects","find","id","parseInt","error","console"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAGA,eAAe,SAASC,OAAT,CAAkBC,KAAlB,EAAyB;AACpC,QAAM;AAACC,IAAAA;AAAD,MAAWD,KAAjB;AACA,MAAIE,WAAJ;;AACA,UAAQD,MAAM,CAACC,WAAf;AACI,SAAK,CAAL;AACIA,MAAAA,WAAW,GAAG,uBAAd;AACA;;AACJ,SAAK,CAAL;AACIA,MAAAA,WAAW,GAAG,QAAd;AACA;;AACJ,SAAK,CAAL;AACIA,MAAAA,WAAW,GAAG,cAAd;AACA;;AACJ,SAAK,CAAL;AACIA,MAAAA,WAAW,GAAG,UAAd;AACA;;AACJ,SAAK,CAAL;AACIA,MAAAA,WAAW,GAAG,QAAd;;AACJ,SAAK,CAAL;AACIA,MAAAA,WAAW,GAAG,cAAd;AAhBR;;AAkBA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,MAAM,CAACE,WAAZ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBF,MAAM,CAACC,WAAzB,CAFJ,CADJ;AAMH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGAH,OAAO,CAACK,eAAR,GAA0B,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAmB;AACzC,MAAIC,GAAJ,EAASC,IAAT,EAAeN,MAAf;;AACA,MAAI;AACAK,IAAAA,GAAG,GAAG,MAAMR,KAAK,CAAE,qCAAF,CAAjB;AACAS,IAAAA,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAb;AACAP,IAAAA,MAAM,GAAGM,IAAI,CAACE,OAAL,CAAaC,IAAb,CAAmBT,MAAD,IAAYA,MAAM,CAACU,EAAP,KAAcC,QAAQ,CAACP,KAAK,CAACM,EAAP,CAApD,CAAT;AACH,GAJD,CAIE,OAAME,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;;AACD,SAAO;AACHZ,IAAAA;AADG,GAAP;AAGH,CAZD,C,CAcA","sourcesContent":["import Layout from '../components/Layout';\nimport React from 'react'\nimport fetch from 'isomorphic-unfetch';\n\n\nexport default function Details (props) {\n    const {skills} = props;\n    let skill_level;\n    switch (skills.skill_level) {\n        case 1:\n            skill_level = \"Fundamental Awareness\";\n            break;\n        case 2:\n            skill_level = \"Novice\";\n            break;\n        case 3:\n            skill_level = \"Intermediate\";\n            break;\n        case 4:\n            skill_level = \"Advanced\"\n            break;\n        case 5:\n            skill_level = \"Expert\"\n        case 6:\n            skill_level = \"Code Wizard!\"\n    }\n    return (\n        <Layout>\n            <h1>{skills.description}</h1>\n            <h2>Skill level: {skills.skill_level}</h2>\n        </Layout>\n    )\n}\n\n// // pages/posts/[id].js\n//\n// function Details() {\n//   // Render post...\n// }\n//\n// // This function gets called at build time\n// export async function getStaticPaths() {\n//   // Call an external API endpoint to get posts\n//   const res = await fetch('http://127.0.0.1:8000/api/v1/skill/')\n//   const data = await res.json()\n//\n//   // Get the paths we want to pre-render based on posts\n//   const paths = data.map((data) => ({\n//     params: { id: post.id },\n//   }))\n//\n//   // We'll pre-render only these paths at build time.\n//   // { fallback: false } means other routes should 404.\n//   return { paths, fallback: false }\n// }\n//\n// // This also gets called at build time\n// export async function getStaticProps({ params }) {\n//   // params contains the post `id`.\n//   // If the route is like /posts/1, then params.id is 1\n//   const res = await fetch(`http://127.0.0.1:8000/api/v1/skill/${params.id}`)\n//   const data = await res.json()\n//\n//   // Pass post data to the page via props\n//   return { props: { data } }\n// }\n//\n// export default Details\n\n\nDetails.getInitialProps = async ({query}) => {\n    let res, data, skills;\n    try {\n        res = await fetch(`http://127.0.0.1:8000/api/v1/skill/`)\n        data = await res.json();\n        skills = data.objects.find((skills) => skills.id === parseInt(query.id));\n    } catch(error){\n        console.error(error);\n    }\n    return {\n        skills\n    }\n};\n\n// export default Details;"]},"metadata":{},"sourceType":"module"}